== rparser

Generic parser that build field tree from a bytes buffer, based on xml description

== Sample

require 'Parser'
include Parser

codecs = load_parsers_from_xml('codecs.xml')

def test_parse(buf,parser)
  begin
  	f,r = parser.parse(buf)
  rescue ErrorBufferUnderflow => e
    puts "Buffer Underflow : " + e.message
  rescue ParsingException => e
    puts "Error during parse : " + e.message
  else 
    puts f.to_yaml
  end
end


buf1 = ["01007038468100c28a201049741043362076380000000000000002801456060959511106411100510000270b04970112004131314130323538443031343539303820202020202020201e393631343530393735323231383030303234413030383131413032353844097801000000000000006a0082023c000095050000000000009c01005f24031507319f0607a00000004220109f260837088150dc39d60b9f2701809f33032090c09f360200489f370495560467df800100df8101020057134974104336207638d15072218398470960000f9f1007066e0a03a4200244010102166001020112020001420201063085022003060202040014590802030200010204020145020706000000000280020b07a000000042204201000201000205020250"].pack("H*")
test_parse(buf1,codecs["msg_acb2a"])
buf2 = ["c1330702015c13020001150204061702000618057008100000190c5454534850414437373032311a0c5454534850413030303030310100723c66a188e28a21104974104336207638000000000000000280110609002714560609595111"].pack("H*")
test_parse(buf2,codecs["msg_cbCom_acb2a"])
buf3 = ["0000005dc1330702015c13020001150204061702000618057008100000190c5454534850414437373032311a0c5454534850413030303030310100723c66a188e28a21104974104336207638000000000000000280110609002714560609595111"].pack("H*")
test_parse(buf3,codecs["msg_acb2a_ip"])

